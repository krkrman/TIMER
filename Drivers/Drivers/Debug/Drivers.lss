
Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000009e6  00000a7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  0080006a  0080006a  00000a84  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ab4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  00000af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011dc  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096a  00000000  00000000  00001e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bad  00000000  00000000  000027de  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000440  00000000  00000000  0000338c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000920  00000000  00000000  000037cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000117b  00000000  00000000  000040ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00005267  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 8a 01 	jmp	0x314	; 0x314 <__vector_1>
   8:	0c 94 b3 01 	jmp	0x366	; 0x366 <__vector_2>
   c:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 bc 02 	jmp	0x578	; 0x578 <__vector_10>
  2c:	0c 94 8d 02 	jmp	0x51a	; 0x51a <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ee       	ldi	r30, 0xE6	; 230
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 37       	cpi	r26, 0x76	; 118
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 54 00 	call	0xa8	; 0xa8 <main>
  8a:	0c 94 f1 04 	jmp	0x9e2	; 0x9e2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LED_voidInit>:
}
void LED_voidTurnOn(void){
	DIO_voidSetPinValue(LED_PIN , LED_PORT , HIGH);	
}
void LED_voidTurnOff(void){
	DIO_voidSetPinValue(LED_PIN , LED_PORT , LOW);
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	0e 94 75 00 	call	0xea	; 0xea <DIO_voidSetPinDirection>
  9c:	08 95       	ret

0000009e <LED_voidToggle>:
}

void LED_voidToggle(void){
	DIO_voidTogglePinValue(LED_PIN , LED_PORT);
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	0e 94 4e 01 	call	0x29c	; 0x29c <DIO_voidTogglePinValue>
  a6:	08 95       	ret

000000a8 <main>:
#include "LIB/STD_TYPES.h"
#include "HAL/LED/LED_interface.h"
#include "MCAL/TIMER0/TIMER0_interface.h"
int main(void)
{ 
	DIO_voidSetPinDirection(3,PORTB ,OUTPUT);
  a8:	41 e0       	ldi	r20, 0x01	; 1
  aa:	61 e0       	ldi	r22, 0x01	; 1
  ac:	83 e0       	ldi	r24, 0x03	; 3
  ae:	0e 94 75 00 	call	0xea	; 0xea <DIO_voidSetPinDirection>
	LED_voidInit();
  b2:	0e 94 49 00 	call	0x92	; 0x92 <LED_voidInit>
	TIMER0_voidInit(CTC_MODE , TIMER0_CTC_DISCONNECT , PRESCALAR_1024 , 0);
  b6:	20 e0       	ldi	r18, 0x00	; 0
  b8:	45 e0       	ldi	r20, 0x05	; 5
  ba:	60 e0       	ldi	r22, 0x00	; 0
  bc:	82 e0       	ldi	r24, 0x02	; 2
  be:	0e 94 05 02 	call	0x40a	; 0x40a <TIMER0_voidInit>
	// 	OCR0_REG = cpuFrequency/(2*frequency*prescalarArray[storedPrescalar-1]) -1 =;
	//  OCR0_REG = 1M /(2 * 3.333 * 1024) - 1 = 145 (Legal)
	TIMER0_voidSetFrequency(3.3333);
  c2:	6a ec       	ldi	r22, 0xCA	; 202
  c4:	74 e5       	ldi	r23, 0x54	; 84
  c6:	85 e5       	ldi	r24, 0x55	; 85
  c8:	90 e4       	ldi	r25, 0x40	; 64
  ca:	0e 94 30 02 	call	0x460	; 0x460 <TIMER0_voidSetFrequency>
	TIMER0_voidEnableInterrupt(TIMER0_INTERRUPT_COMPARE);
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	0e 94 74 02 	call	0x4e8	; 0x4e8 <TIMER0_voidEnableInterrupt>
	TIMER0_voidSetCallBack(TIMER0_INTERRUPT_COMPARE , LED_voidToggle);
  d4:	6f e4       	ldi	r22, 0x4F	; 79
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	0e 94 82 02 	call	0x504	; 0x504 <TIMER0_voidSetCallBack>
  de:	ff cf       	rjmp	.-2      	; 0xde <main+0x36>

000000e0 <CLOCK_u32GetSystemClock>:
	__asm__ volatile("NOP");
}

u32 CLOCK_u32GetSystemClock(void){
	return CLOCK_SYSTEM_FREQUENCY;
  e0:	60 e4       	ldi	r22, 0x40	; 64
  e2:	72 e4       	ldi	r23, 0x42	; 66
  e4:	8f e0       	ldi	r24, 0x0F	; 15
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	08 95       	ret

000000ea <DIO_voidSetPinDirection>:

		case PORTD:
		return PIND_REG;
	}
	return 0;   //34an el warning tany :D
}
  ea:	61 30       	cpi	r22, 0x01	; 1
  ec:	e1 f1       	breq	.+120    	; 0x166 <DIO_voidSetPinDirection+0x7c>
  ee:	38 f0       	brcs	.+14     	; 0xfe <DIO_voidSetPinDirection+0x14>
  f0:	62 30       	cpi	r22, 0x02	; 2
  f2:	09 f4       	brne	.+2      	; 0xf6 <DIO_voidSetPinDirection+0xc>
  f4:	6c c0       	rjmp	.+216    	; 0x1ce <DIO_voidSetPinDirection+0xe4>
  f6:	63 30       	cpi	r22, 0x03	; 3
  f8:	09 f4       	brne	.+2      	; 0xfc <DIO_voidSetPinDirection+0x12>
  fa:	9d c0       	rjmp	.+314    	; 0x236 <DIO_voidSetPinDirection+0x14c>
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	69 f4       	brne	.+26     	; 0x11c <DIO_voidSetPinDirection+0x32>
 102:	4a b3       	in	r20, 0x1a	; 26
 104:	21 e0       	ldi	r18, 0x01	; 1
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	b9 01       	movw	r22, r18
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_voidSetPinDirection+0x26>
 10c:	66 0f       	add	r22, r22
 10e:	77 1f       	adc	r23, r23
 110:	8a 95       	dec	r24
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_voidSetPinDirection+0x22>
 114:	cb 01       	movw	r24, r22
 116:	84 2b       	or	r24, r20
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	41 11       	cpse	r20, r1
 11e:	0e c0       	rjmp	.+28     	; 0x13c <DIO_voidSetPinDirection+0x52>
 120:	4a b3       	in	r20, 0x1a	; 26
 122:	21 e0       	ldi	r18, 0x01	; 1
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	b9 01       	movw	r22, r18
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_voidSetPinDirection+0x44>
 12a:	66 0f       	add	r22, r22
 12c:	77 1f       	adc	r23, r23
 12e:	8a 95       	dec	r24
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_voidSetPinDirection+0x40>
 132:	cb 01       	movw	r24, r22
 134:	80 95       	com	r24
 136:	84 23       	and	r24, r20
 138:	8a bb       	out	0x1a, r24	; 26
 13a:	08 95       	ret
 13c:	42 30       	cpi	r20, 0x02	; 2
 13e:	09 f0       	breq	.+2      	; 0x142 <DIO_voidSetPinDirection+0x58>
 140:	ac c0       	rjmp	.+344    	; 0x29a <DIO_voidSetPinDirection+0x1b0>
 142:	4b b3       	in	r20, 0x1b	; 27
 144:	21 e0       	ldi	r18, 0x01	; 1
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	b9 01       	movw	r22, r18
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_voidSetPinDirection+0x66>
 14c:	66 0f       	add	r22, r22
 14e:	77 1f       	adc	r23, r23
 150:	8a 95       	dec	r24
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_voidSetPinDirection+0x62>
 154:	cb 01       	movw	r24, r22
 156:	94 2f       	mov	r25, r20
 158:	98 2b       	or	r25, r24
 15a:	9b bb       	out	0x1b, r25	; 27
 15c:	9a b3       	in	r25, 0x1a	; 26
 15e:	80 95       	com	r24
 160:	89 23       	and	r24, r25
 162:	8a bb       	out	0x1a, r24	; 26
 164:	08 95       	ret
 166:	41 30       	cpi	r20, 0x01	; 1
 168:	69 f4       	brne	.+26     	; 0x184 <DIO_voidSetPinDirection+0x9a>
 16a:	47 b3       	in	r20, 0x17	; 23
 16c:	21 e0       	ldi	r18, 0x01	; 1
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	b9 01       	movw	r22, r18
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_voidSetPinDirection+0x8e>
 174:	66 0f       	add	r22, r22
 176:	77 1f       	adc	r23, r23
 178:	8a 95       	dec	r24
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_voidSetPinDirection+0x8a>
 17c:	cb 01       	movw	r24, r22
 17e:	84 2b       	or	r24, r20
 180:	87 bb       	out	0x17, r24	; 23
 182:	08 95       	ret
 184:	41 11       	cpse	r20, r1
 186:	0e c0       	rjmp	.+28     	; 0x1a4 <DIO_voidSetPinDirection+0xba>
 188:	47 b3       	in	r20, 0x17	; 23
 18a:	21 e0       	ldi	r18, 0x01	; 1
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	b9 01       	movw	r22, r18
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_voidSetPinDirection+0xac>
 192:	66 0f       	add	r22, r22
 194:	77 1f       	adc	r23, r23
 196:	8a 95       	dec	r24
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_voidSetPinDirection+0xa8>
 19a:	cb 01       	movw	r24, r22
 19c:	80 95       	com	r24
 19e:	84 23       	and	r24, r20
 1a0:	87 bb       	out	0x17, r24	; 23
 1a2:	08 95       	ret
 1a4:	42 30       	cpi	r20, 0x02	; 2
 1a6:	09 f0       	breq	.+2      	; 0x1aa <DIO_voidSetPinDirection+0xc0>
 1a8:	78 c0       	rjmp	.+240    	; 0x29a <DIO_voidSetPinDirection+0x1b0>
 1aa:	48 b3       	in	r20, 0x18	; 24
 1ac:	21 e0       	ldi	r18, 0x01	; 1
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	b9 01       	movw	r22, r18
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <DIO_voidSetPinDirection+0xce>
 1b4:	66 0f       	add	r22, r22
 1b6:	77 1f       	adc	r23, r23
 1b8:	8a 95       	dec	r24
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <DIO_voidSetPinDirection+0xca>
 1bc:	cb 01       	movw	r24, r22
 1be:	94 2f       	mov	r25, r20
 1c0:	98 2b       	or	r25, r24
 1c2:	98 bb       	out	0x18, r25	; 24
 1c4:	97 b3       	in	r25, 0x17	; 23
 1c6:	80 95       	com	r24
 1c8:	89 23       	and	r24, r25
 1ca:	87 bb       	out	0x17, r24	; 23
 1cc:	08 95       	ret
 1ce:	41 30       	cpi	r20, 0x01	; 1
 1d0:	69 f4       	brne	.+26     	; 0x1ec <DIO_voidSetPinDirection+0x102>
 1d2:	44 b3       	in	r20, 0x14	; 20
 1d4:	21 e0       	ldi	r18, 0x01	; 1
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	b9 01       	movw	r22, r18
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_voidSetPinDirection+0xf6>
 1dc:	66 0f       	add	r22, r22
 1de:	77 1f       	adc	r23, r23
 1e0:	8a 95       	dec	r24
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_voidSetPinDirection+0xf2>
 1e4:	cb 01       	movw	r24, r22
 1e6:	84 2b       	or	r24, r20
 1e8:	84 bb       	out	0x14, r24	; 20
 1ea:	08 95       	ret
 1ec:	41 11       	cpse	r20, r1
 1ee:	0e c0       	rjmp	.+28     	; 0x20c <DIO_voidSetPinDirection+0x122>
 1f0:	44 b3       	in	r20, 0x14	; 20
 1f2:	21 e0       	ldi	r18, 0x01	; 1
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	b9 01       	movw	r22, r18
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_voidSetPinDirection+0x114>
 1fa:	66 0f       	add	r22, r22
 1fc:	77 1f       	adc	r23, r23
 1fe:	8a 95       	dec	r24
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_voidSetPinDirection+0x110>
 202:	cb 01       	movw	r24, r22
 204:	80 95       	com	r24
 206:	84 23       	and	r24, r20
 208:	84 bb       	out	0x14, r24	; 20
 20a:	08 95       	ret
 20c:	42 30       	cpi	r20, 0x02	; 2
 20e:	09 f0       	breq	.+2      	; 0x212 <DIO_voidSetPinDirection+0x128>
 210:	44 c0       	rjmp	.+136    	; 0x29a <DIO_voidSetPinDirection+0x1b0>
 212:	45 b3       	in	r20, 0x15	; 21
 214:	21 e0       	ldi	r18, 0x01	; 1
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	b9 01       	movw	r22, r18
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_voidSetPinDirection+0x136>
 21c:	66 0f       	add	r22, r22
 21e:	77 1f       	adc	r23, r23
 220:	8a 95       	dec	r24
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_voidSetPinDirection+0x132>
 224:	cb 01       	movw	r24, r22
 226:	94 2f       	mov	r25, r20
 228:	98 2b       	or	r25, r24
 22a:	95 bb       	out	0x15, r25	; 21
 22c:	94 b3       	in	r25, 0x14	; 20
 22e:	80 95       	com	r24
 230:	89 23       	and	r24, r25
 232:	84 bb       	out	0x14, r24	; 20
 234:	08 95       	ret
 236:	41 30       	cpi	r20, 0x01	; 1
 238:	69 f4       	brne	.+26     	; 0x254 <DIO_voidSetPinDirection+0x16a>
 23a:	41 b3       	in	r20, 0x11	; 17
 23c:	21 e0       	ldi	r18, 0x01	; 1
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	b9 01       	movw	r22, r18
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_voidSetPinDirection+0x15e>
 244:	66 0f       	add	r22, r22
 246:	77 1f       	adc	r23, r23
 248:	8a 95       	dec	r24
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_voidSetPinDirection+0x15a>
 24c:	cb 01       	movw	r24, r22
 24e:	84 2b       	or	r24, r20
 250:	81 bb       	out	0x11, r24	; 17
 252:	08 95       	ret
 254:	41 11       	cpse	r20, r1
 256:	0e c0       	rjmp	.+28     	; 0x274 <DIO_voidSetPinDirection+0x18a>
 258:	41 b3       	in	r20, 0x11	; 17
 25a:	21 e0       	ldi	r18, 0x01	; 1
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	b9 01       	movw	r22, r18
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_voidSetPinDirection+0x17c>
 262:	66 0f       	add	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	8a 95       	dec	r24
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_voidSetPinDirection+0x178>
 26a:	cb 01       	movw	r24, r22
 26c:	80 95       	com	r24
 26e:	84 23       	and	r24, r20
 270:	81 bb       	out	0x11, r24	; 17
 272:	08 95       	ret
 274:	42 30       	cpi	r20, 0x02	; 2
 276:	89 f4       	brne	.+34     	; 0x29a <DIO_voidSetPinDirection+0x1b0>
 278:	42 b3       	in	r20, 0x12	; 18
 27a:	21 e0       	ldi	r18, 0x01	; 1
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	b9 01       	movw	r22, r18
 280:	02 c0       	rjmp	.+4      	; 0x286 <DIO_voidSetPinDirection+0x19c>
 282:	66 0f       	add	r22, r22
 284:	77 1f       	adc	r23, r23
 286:	8a 95       	dec	r24
 288:	e2 f7       	brpl	.-8      	; 0x282 <DIO_voidSetPinDirection+0x198>
 28a:	cb 01       	movw	r24, r22
 28c:	94 2f       	mov	r25, r20
 28e:	98 2b       	or	r25, r24
 290:	92 bb       	out	0x12, r25	; 18
 292:	91 b3       	in	r25, 0x11	; 17
 294:	80 95       	com	r24
 296:	89 23       	and	r24, r25
 298:	81 bb       	out	0x11, r24	; 17
 29a:	08 95       	ret

0000029c <DIO_voidTogglePinValue>:

void DIO_voidTogglePinValue (u8 Copy_u8PinNumber, u8 Copy_u8PortNumber)
{
	switch (Copy_u8PortNumber)
 29c:	61 30       	cpi	r22, 0x01	; 1
 29e:	99 f0       	breq	.+38     	; 0x2c6 <DIO_voidTogglePinValue+0x2a>
 2a0:	28 f0       	brcs	.+10     	; 0x2ac <DIO_voidTogglePinValue+0x10>
 2a2:	62 30       	cpi	r22, 0x02	; 2
 2a4:	e9 f0       	breq	.+58     	; 0x2e0 <DIO_voidTogglePinValue+0x44>
 2a6:	63 30       	cpi	r22, 0x03	; 3
 2a8:	41 f1       	breq	.+80     	; 0x2fa <DIO_voidTogglePinValue+0x5e>
 2aa:	08 95       	ret
	{
		case PORTA:
			TOG_BIT(PORTA_REG , Copy_u8PinNumber);
 2ac:	4b b3       	in	r20, 0x1b	; 27
 2ae:	21 e0       	ldi	r18, 0x01	; 1
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	b9 01       	movw	r22, r18
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_voidTogglePinValue+0x1e>
 2b6:	66 0f       	add	r22, r22
 2b8:	77 1f       	adc	r23, r23
 2ba:	8a 95       	dec	r24
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_voidTogglePinValue+0x1a>
 2be:	cb 01       	movw	r24, r22
 2c0:	84 27       	eor	r24, r20
 2c2:	8b bb       	out	0x1b, r24	; 27
			break;
 2c4:	08 95       	ret

		case PORTB:
			TOG_BIT(PORTB_REG , Copy_u8PinNumber);
 2c6:	48 b3       	in	r20, 0x18	; 24
 2c8:	21 e0       	ldi	r18, 0x01	; 1
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	b9 01       	movw	r22, r18
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_voidTogglePinValue+0x38>
 2d0:	66 0f       	add	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	8a 95       	dec	r24
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_voidTogglePinValue+0x34>
 2d8:	cb 01       	movw	r24, r22
 2da:	84 27       	eor	r24, r20
 2dc:	88 bb       	out	0x18, r24	; 24
			break;
 2de:	08 95       	ret
		
		case PORTC:
			TOG_BIT(PORTC_REG , Copy_u8PinNumber);
 2e0:	45 b3       	in	r20, 0x15	; 21
 2e2:	21 e0       	ldi	r18, 0x01	; 1
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	b9 01       	movw	r22, r18
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <DIO_voidTogglePinValue+0x52>
 2ea:	66 0f       	add	r22, r22
 2ec:	77 1f       	adc	r23, r23
 2ee:	8a 95       	dec	r24
 2f0:	e2 f7       	brpl	.-8      	; 0x2ea <DIO_voidTogglePinValue+0x4e>
 2f2:	cb 01       	movw	r24, r22
 2f4:	84 27       	eor	r24, r20
 2f6:	85 bb       	out	0x15, r24	; 21
			break;
 2f8:	08 95       	ret

		
		case PORTD:
			TOG_BIT(PORTD_REG , Copy_u8PinNumber);
 2fa:	42 b3       	in	r20, 0x12	; 18
 2fc:	21 e0       	ldi	r18, 0x01	; 1
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	b9 01       	movw	r22, r18
 302:	02 c0       	rjmp	.+4      	; 0x308 <DIO_voidTogglePinValue+0x6c>
 304:	66 0f       	add	r22, r22
 306:	77 1f       	adc	r23, r23
 308:	8a 95       	dec	r24
 30a:	e2 f7       	brpl	.-8      	; 0x304 <DIO_voidTogglePinValue+0x68>
 30c:	cb 01       	movw	r24, r22
 30e:	84 27       	eor	r24, r20
 310:	82 bb       	out	0x12, r24	; 18
 312:	08 95       	ret

00000314 <__vector_1>:
	if(interruptPin > INT2)
	return;
	EXTI_voidCallBacks[interruptPin] = CallBack;
}

void EXTI_VECTOR_ISR_EXTI0(void){
 314:	1f 92       	push	r1
 316:	0f 92       	push	r0
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	0f 92       	push	r0
 31c:	11 24       	eor	r1, r1
 31e:	2f 93       	push	r18
 320:	3f 93       	push	r19
 322:	4f 93       	push	r20
 324:	5f 93       	push	r21
 326:	6f 93       	push	r22
 328:	7f 93       	push	r23
 32a:	8f 93       	push	r24
 32c:	9f 93       	push	r25
 32e:	af 93       	push	r26
 330:	bf 93       	push	r27
 332:	ef 93       	push	r30
 334:	ff 93       	push	r31
	
	if(EXTI_voidCallBacks[0] != 0){
 336:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__data_end>
 33a:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__data_end+0x1>
 33e:	30 97       	sbiw	r30, 0x00	; 0
 340:	09 f0       	breq	.+2      	; 0x344 <__vector_1+0x30>
		EXTI_voidCallBacks[0]();
 342:	09 95       	icall
	}
}
 344:	ff 91       	pop	r31
 346:	ef 91       	pop	r30
 348:	bf 91       	pop	r27
 34a:	af 91       	pop	r26
 34c:	9f 91       	pop	r25
 34e:	8f 91       	pop	r24
 350:	7f 91       	pop	r23
 352:	6f 91       	pop	r22
 354:	5f 91       	pop	r21
 356:	4f 91       	pop	r20
 358:	3f 91       	pop	r19
 35a:	2f 91       	pop	r18
 35c:	0f 90       	pop	r0
 35e:	0f be       	out	0x3f, r0	; 63
 360:	0f 90       	pop	r0
 362:	1f 90       	pop	r1
 364:	18 95       	reti

00000366 <__vector_2>:

void EXTI_VECTOR_ISR_EXTI1(void){
 366:	1f 92       	push	r1
 368:	0f 92       	push	r0
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	0f 92       	push	r0
 36e:	11 24       	eor	r1, r1
 370:	2f 93       	push	r18
 372:	3f 93       	push	r19
 374:	4f 93       	push	r20
 376:	5f 93       	push	r21
 378:	6f 93       	push	r22
 37a:	7f 93       	push	r23
 37c:	8f 93       	push	r24
 37e:	9f 93       	push	r25
 380:	af 93       	push	r26
 382:	bf 93       	push	r27
 384:	ef 93       	push	r30
 386:	ff 93       	push	r31
	
	if(EXTI_voidCallBacks[1] != 0){
 388:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <__data_end+0x2>
 38c:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <__data_end+0x3>
 390:	30 97       	sbiw	r30, 0x00	; 0
 392:	09 f0       	breq	.+2      	; 0x396 <__vector_2+0x30>
		EXTI_voidCallBacks[1]();
 394:	09 95       	icall
	}
}
 396:	ff 91       	pop	r31
 398:	ef 91       	pop	r30
 39a:	bf 91       	pop	r27
 39c:	af 91       	pop	r26
 39e:	9f 91       	pop	r25
 3a0:	8f 91       	pop	r24
 3a2:	7f 91       	pop	r23
 3a4:	6f 91       	pop	r22
 3a6:	5f 91       	pop	r21
 3a8:	4f 91       	pop	r20
 3aa:	3f 91       	pop	r19
 3ac:	2f 91       	pop	r18
 3ae:	0f 90       	pop	r0
 3b0:	0f be       	out	0x3f, r0	; 63
 3b2:	0f 90       	pop	r0
 3b4:	1f 90       	pop	r1
 3b6:	18 95       	reti

000003b8 <__vector_3>:

void EXTI_VECTOR_ISR_EXTI2(void){
 3b8:	1f 92       	push	r1
 3ba:	0f 92       	push	r0
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	0f 92       	push	r0
 3c0:	11 24       	eor	r1, r1
 3c2:	2f 93       	push	r18
 3c4:	3f 93       	push	r19
 3c6:	4f 93       	push	r20
 3c8:	5f 93       	push	r21
 3ca:	6f 93       	push	r22
 3cc:	7f 93       	push	r23
 3ce:	8f 93       	push	r24
 3d0:	9f 93       	push	r25
 3d2:	af 93       	push	r26
 3d4:	bf 93       	push	r27
 3d6:	ef 93       	push	r30
 3d8:	ff 93       	push	r31
	if(EXTI_voidCallBacks[2] != 0){
 3da:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <__data_end+0x4>
 3de:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <__data_end+0x5>
 3e2:	30 97       	sbiw	r30, 0x00	; 0
 3e4:	09 f0       	breq	.+2      	; 0x3e8 <__vector_3+0x30>
		EXTI_voidCallBacks[2]();
 3e6:	09 95       	icall
	}
 3e8:	ff 91       	pop	r31
 3ea:	ef 91       	pop	r30
 3ec:	bf 91       	pop	r27
 3ee:	af 91       	pop	r26
 3f0:	9f 91       	pop	r25
 3f2:	8f 91       	pop	r24
 3f4:	7f 91       	pop	r23
 3f6:	6f 91       	pop	r22
 3f8:	5f 91       	pop	r21
 3fa:	4f 91       	pop	r20
 3fc:	3f 91       	pop	r19
 3fe:	2f 91       	pop	r18
 400:	0f 90       	pop	r0
 402:	0f be       	out	0x3f, r0	; 63
 404:	0f 90       	pop	r0
 406:	1f 90       	pop	r1
 408:	18 95       	reti

0000040a <TIMER0_voidInit>:
{
	SET_BIT(TIMSK_REG , interrupt);
	SET_BIT(SREG_REG , 7);
}
void TIMER0_voidDisableInterrupt(enum TIMER0_Interrupt interrupt){
	CLR_BIT(TIMSK_REG , interrupt);
 40a:	1c be       	out	0x3c, r1	; 60
 40c:	22 bf       	out	0x32, r18	; 50
 40e:	99 b7       	in	r25, 0x39	; 57
 410:	9f 7b       	andi	r25, 0xBF	; 191
 412:	99 bf       	out	0x39, r25	; 57
 414:	99 b7       	in	r25, 0x39	; 57
 416:	9f 77       	andi	r25, 0x7F	; 127
 418:	99 bf       	out	0x39, r25	; 57
 41a:	a8 2f       	mov	r26, r24
 41c:	a1 70       	andi	r26, 0x01	; 1
 41e:	b0 e0       	ldi	r27, 0x00	; 0
 420:	00 24       	eor	r0, r0
 422:	b6 95       	lsr	r27
 424:	a7 95       	ror	r26
 426:	07 94       	ror	r0
 428:	b6 95       	lsr	r27
 42a:	a7 95       	ror	r26
 42c:	07 94       	ror	r0
 42e:	ba 2f       	mov	r27, r26
 430:	a0 2d       	mov	r26, r0
 432:	81 fb       	bst	r24, 1
 434:	ee 27       	eor	r30, r30
 436:	e0 f9       	bld	r30, 0
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	ee 0f       	add	r30, r30
 43c:	ff 1f       	adc	r31, r31
 43e:	ee 0f       	add	r30, r30
 440:	ff 1f       	adc	r31, r31
 442:	ee 0f       	add	r30, r30
 444:	ff 1f       	adc	r31, r31
 446:	80 e1       	ldi	r24, 0x10	; 16
 448:	68 9f       	mul	r22, r24
 44a:	b0 01       	movw	r22, r0
 44c:	11 24       	eor	r1, r1
 44e:	ea 2b       	or	r30, r26
 450:	6e 2b       	or	r22, r30
 452:	64 2b       	or	r22, r20
 454:	63 bf       	out	0x33, r22	; 51
 456:	40 93 75 00 	sts	0x0075, r20	; 0x800075 <storedPrescalar>
 45a:	20 93 74 00 	sts	0x0074, r18	; 0x800074 <storedPreload>
 45e:	08 95       	ret

00000460 <TIMER0_voidSetFrequency>:
 460:	8f 92       	push	r8
 462:	9f 92       	push	r9
 464:	af 92       	push	r10
 466:	bf 92       	push	r11
 468:	cf 92       	push	r12
 46a:	df 92       	push	r13
 46c:	ef 92       	push	r14
 46e:	ff 92       	push	r15
 470:	6b 01       	movw	r12, r22
 472:	7c 01       	movw	r14, r24
 474:	0e 94 70 00 	call	0xe0	; 0xe0 <CLOCK_u32GetSystemClock>
 478:	4b 01       	movw	r8, r22
 47a:	5c 01       	movw	r10, r24
 47c:	a7 01       	movw	r20, r14
 47e:	96 01       	movw	r18, r12
 480:	c7 01       	movw	r24, r14
 482:	b6 01       	movw	r22, r12
 484:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <__addsf3>
 488:	6b 01       	movw	r12, r22
 48a:	7c 01       	movw	r14, r24
 48c:	e0 91 75 00 	lds	r30, 0x0075	; 0x800075 <storedPrescalar>
 490:	f0 e0       	ldi	r31, 0x00	; 0
 492:	31 97       	sbiw	r30, 0x01	; 1
 494:	ee 0f       	add	r30, r30
 496:	ff 1f       	adc	r31, r31
 498:	e0 5a       	subi	r30, 0xA0	; 160
 49a:	ff 4f       	sbci	r31, 0xFF	; 255
 49c:	60 81       	ld	r22, Z
 49e:	71 81       	ldd	r23, Z+1	; 0x01
 4a0:	80 e0       	ldi	r24, 0x00	; 0
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__floatunsisf>
 4a8:	a7 01       	movw	r20, r14
 4aa:	96 01       	movw	r18, r12
 4ac:	0e 94 84 04 	call	0x908	; 0x908 <__mulsf3>
 4b0:	6b 01       	movw	r12, r22
 4b2:	7c 01       	movw	r14, r24
 4b4:	c5 01       	movw	r24, r10
 4b6:	b4 01       	movw	r22, r8
 4b8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__floatunsisf>
 4bc:	a7 01       	movw	r20, r14
 4be:	96 01       	movw	r18, r12
 4c0:	0e 94 55 03 	call	0x6aa	; 0x6aa <__divsf3>
 4c4:	20 e0       	ldi	r18, 0x00	; 0
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	40 e8       	ldi	r20, 0x80	; 128
 4ca:	5f e3       	ldi	r21, 0x3F	; 63
 4cc:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__subsf3>
 4d0:	0e 94 c7 03 	call	0x78e	; 0x78e <__fixunssfsi>
 4d4:	6c bf       	out	0x3c, r22	; 60
 4d6:	ff 90       	pop	r15
 4d8:	ef 90       	pop	r14
 4da:	df 90       	pop	r13
 4dc:	cf 90       	pop	r12
 4de:	bf 90       	pop	r11
 4e0:	af 90       	pop	r10
 4e2:	9f 90       	pop	r9
 4e4:	8f 90       	pop	r8
 4e6:	08 95       	ret

000004e8 <TIMER0_voidEnableInterrupt>:
 4e8:	99 b7       	in	r25, 0x39	; 57
 4ea:	21 e0       	ldi	r18, 0x01	; 1
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <TIMER0_voidEnableInterrupt+0xc>
 4f0:	22 0f       	add	r18, r18
 4f2:	33 1f       	adc	r19, r19
 4f4:	8a 95       	dec	r24
 4f6:	e2 f7       	brpl	.-8      	; 0x4f0 <TIMER0_voidEnableInterrupt+0x8>
 4f8:	29 2b       	or	r18, r25
 4fa:	29 bf       	out	0x39, r18	; 57
 4fc:	8f b7       	in	r24, 0x3f	; 63
 4fe:	80 68       	ori	r24, 0x80	; 128
 500:	8f bf       	out	0x3f, r24	; 63
 502:	08 95       	ret

00000504 <TIMER0_voidSetCallBack>:
}
void TIMER0_voidSetCallBack(enum TIMER0_Interrupt interrupt, void(*callBack)(void))
{
	if (interrupt > 1)
 504:	82 30       	cpi	r24, 0x02	; 2
 506:	40 f4       	brcc	.+16     	; 0x518 <TIMER0_voidSetCallBack+0x14>
		return;
	TIMER0_callBacks[interrupt] = callBack;
 508:	e8 2f       	mov	r30, r24
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	ee 0f       	add	r30, r30
 50e:	ff 1f       	adc	r31, r31
 510:	e0 59       	subi	r30, 0x90	; 144
 512:	ff 4f       	sbci	r31, 0xFF	; 255
 514:	71 83       	std	Z+1, r23	; 0x01
 516:	60 83       	st	Z, r22
 518:	08 95       	ret

0000051a <__vector_11>:
};

void TIMER0_ISR_VECTOR_OVERFLOW(void){
 51a:	1f 92       	push	r1
 51c:	0f 92       	push	r0
 51e:	0f b6       	in	r0, 0x3f	; 63
 520:	0f 92       	push	r0
 522:	11 24       	eor	r1, r1
 524:	2f 93       	push	r18
 526:	3f 93       	push	r19
 528:	4f 93       	push	r20
 52a:	5f 93       	push	r21
 52c:	6f 93       	push	r22
 52e:	7f 93       	push	r23
 530:	8f 93       	push	r24
 532:	9f 93       	push	r25
 534:	af 93       	push	r26
 536:	bf 93       	push	r27
 538:	ef 93       	push	r30
 53a:	ff 93       	push	r31
	if(TIMER0_callBacks[0] != 0){
 53c:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <TIMER0_callBacks>
 540:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <TIMER0_callBacks+0x1>
 544:	30 97       	sbiw	r30, 0x00	; 0
 546:	09 f0       	breq	.+2      	; 0x54a <__vector_11+0x30>
		TIMER0_callBacks[0]();
 548:	09 95       	icall
	}
	SET_BIT(TIFR_REG,0);
 54a:	88 b7       	in	r24, 0x38	; 56
 54c:	81 60       	ori	r24, 0x01	; 1
 54e:	88 bf       	out	0x38, r24	; 56
	TCNT0_REG = storedPreload;
 550:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <storedPreload>
 554:	82 bf       	out	0x32, r24	; 50
}
 556:	ff 91       	pop	r31
 558:	ef 91       	pop	r30
 55a:	bf 91       	pop	r27
 55c:	af 91       	pop	r26
 55e:	9f 91       	pop	r25
 560:	8f 91       	pop	r24
 562:	7f 91       	pop	r23
 564:	6f 91       	pop	r22
 566:	5f 91       	pop	r21
 568:	4f 91       	pop	r20
 56a:	3f 91       	pop	r19
 56c:	2f 91       	pop	r18
 56e:	0f 90       	pop	r0
 570:	0f be       	out	0x3f, r0	; 63
 572:	0f 90       	pop	r0
 574:	1f 90       	pop	r1
 576:	18 95       	reti

00000578 <__vector_10>:
void TIMER0_ISR_VECTOR_COMPARE(void){
 578:	1f 92       	push	r1
 57a:	0f 92       	push	r0
 57c:	0f b6       	in	r0, 0x3f	; 63
 57e:	0f 92       	push	r0
 580:	11 24       	eor	r1, r1
 582:	2f 93       	push	r18
 584:	3f 93       	push	r19
 586:	4f 93       	push	r20
 588:	5f 93       	push	r21
 58a:	6f 93       	push	r22
 58c:	7f 93       	push	r23
 58e:	8f 93       	push	r24
 590:	9f 93       	push	r25
 592:	af 93       	push	r26
 594:	bf 93       	push	r27
 596:	ef 93       	push	r30
 598:	ff 93       	push	r31
	if(TIMER0_callBacks[1] != 0){
 59a:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <TIMER0_callBacks+0x2>
 59e:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <TIMER0_callBacks+0x3>
 5a2:	30 97       	sbiw	r30, 0x00	; 0
 5a4:	09 f0       	breq	.+2      	; 0x5a8 <__vector_10+0x30>
		TIMER0_callBacks[1]();
 5a6:	09 95       	icall
	}
	SET_BIT(TIFR_REG,1);
 5a8:	88 b7       	in	r24, 0x38	; 56
 5aa:	82 60       	ori	r24, 0x02	; 2
 5ac:	88 bf       	out	0x38, r24	; 56
 5ae:	ff 91       	pop	r31
 5b0:	ef 91       	pop	r30
 5b2:	bf 91       	pop	r27
 5b4:	af 91       	pop	r26
 5b6:	9f 91       	pop	r25
 5b8:	8f 91       	pop	r24
 5ba:	7f 91       	pop	r23
 5bc:	6f 91       	pop	r22
 5be:	5f 91       	pop	r21
 5c0:	4f 91       	pop	r20
 5c2:	3f 91       	pop	r19
 5c4:	2f 91       	pop	r18
 5c6:	0f 90       	pop	r0
 5c8:	0f be       	out	0x3f, r0	; 63
 5ca:	0f 90       	pop	r0
 5cc:	1f 90       	pop	r1
 5ce:	18 95       	reti

000005d0 <__subsf3>:
 5d0:	50 58       	subi	r21, 0x80	; 128

000005d2 <__addsf3>:
 5d2:	bb 27       	eor	r27, r27
 5d4:	aa 27       	eor	r26, r26
 5d6:	0e 94 00 03 	call	0x600	; 0x600 <__addsf3x>
 5da:	0c 94 4a 04 	jmp	0x894	; 0x894 <__fp_round>
 5de:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscA>
 5e2:	38 f0       	brcs	.+14     	; 0x5f2 <__addsf3+0x20>
 5e4:	0e 94 43 04 	call	0x886	; 0x886 <__fp_pscB>
 5e8:	20 f0       	brcs	.+8      	; 0x5f2 <__addsf3+0x20>
 5ea:	39 f4       	brne	.+14     	; 0x5fa <__addsf3+0x28>
 5ec:	9f 3f       	cpi	r25, 0xFF	; 255
 5ee:	19 f4       	brne	.+6      	; 0x5f6 <__addsf3+0x24>
 5f0:	26 f4       	brtc	.+8      	; 0x5fa <__addsf3+0x28>
 5f2:	0c 94 39 04 	jmp	0x872	; 0x872 <__fp_nan>
 5f6:	0e f4       	brtc	.+2      	; 0x5fa <__addsf3+0x28>
 5f8:	e0 95       	com	r30
 5fa:	e7 fb       	bst	r30, 7
 5fc:	0c 94 33 04 	jmp	0x866	; 0x866 <__fp_inf>

00000600 <__addsf3x>:
 600:	e9 2f       	mov	r30, r25
 602:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_split3>
 606:	58 f3       	brcs	.-42     	; 0x5de <__addsf3+0xc>
 608:	ba 17       	cp	r27, r26
 60a:	62 07       	cpc	r22, r18
 60c:	73 07       	cpc	r23, r19
 60e:	84 07       	cpc	r24, r20
 610:	95 07       	cpc	r25, r21
 612:	20 f0       	brcs	.+8      	; 0x61c <__addsf3x+0x1c>
 614:	79 f4       	brne	.+30     	; 0x634 <__addsf3x+0x34>
 616:	a6 f5       	brtc	.+104    	; 0x680 <__addsf3x+0x80>
 618:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_zero>
 61c:	0e f4       	brtc	.+2      	; 0x620 <__addsf3x+0x20>
 61e:	e0 95       	com	r30
 620:	0b 2e       	mov	r0, r27
 622:	ba 2f       	mov	r27, r26
 624:	a0 2d       	mov	r26, r0
 626:	0b 01       	movw	r0, r22
 628:	b9 01       	movw	r22, r18
 62a:	90 01       	movw	r18, r0
 62c:	0c 01       	movw	r0, r24
 62e:	ca 01       	movw	r24, r20
 630:	a0 01       	movw	r20, r0
 632:	11 24       	eor	r1, r1
 634:	ff 27       	eor	r31, r31
 636:	59 1b       	sub	r21, r25
 638:	99 f0       	breq	.+38     	; 0x660 <__addsf3x+0x60>
 63a:	59 3f       	cpi	r21, 0xF9	; 249
 63c:	50 f4       	brcc	.+20     	; 0x652 <__addsf3x+0x52>
 63e:	50 3e       	cpi	r21, 0xE0	; 224
 640:	68 f1       	brcs	.+90     	; 0x69c <__addsf3x+0x9c>
 642:	1a 16       	cp	r1, r26
 644:	f0 40       	sbci	r31, 0x00	; 0
 646:	a2 2f       	mov	r26, r18
 648:	23 2f       	mov	r18, r19
 64a:	34 2f       	mov	r19, r20
 64c:	44 27       	eor	r20, r20
 64e:	58 5f       	subi	r21, 0xF8	; 248
 650:	f3 cf       	rjmp	.-26     	; 0x638 <__addsf3x+0x38>
 652:	46 95       	lsr	r20
 654:	37 95       	ror	r19
 656:	27 95       	ror	r18
 658:	a7 95       	ror	r26
 65a:	f0 40       	sbci	r31, 0x00	; 0
 65c:	53 95       	inc	r21
 65e:	c9 f7       	brne	.-14     	; 0x652 <__addsf3x+0x52>
 660:	7e f4       	brtc	.+30     	; 0x680 <__addsf3x+0x80>
 662:	1f 16       	cp	r1, r31
 664:	ba 0b       	sbc	r27, r26
 666:	62 0b       	sbc	r22, r18
 668:	73 0b       	sbc	r23, r19
 66a:	84 0b       	sbc	r24, r20
 66c:	ba f0       	brmi	.+46     	; 0x69c <__addsf3x+0x9c>
 66e:	91 50       	subi	r25, 0x01	; 1
 670:	a1 f0       	breq	.+40     	; 0x69a <__addsf3x+0x9a>
 672:	ff 0f       	add	r31, r31
 674:	bb 1f       	adc	r27, r27
 676:	66 1f       	adc	r22, r22
 678:	77 1f       	adc	r23, r23
 67a:	88 1f       	adc	r24, r24
 67c:	c2 f7       	brpl	.-16     	; 0x66e <__addsf3x+0x6e>
 67e:	0e c0       	rjmp	.+28     	; 0x69c <__addsf3x+0x9c>
 680:	ba 0f       	add	r27, r26
 682:	62 1f       	adc	r22, r18
 684:	73 1f       	adc	r23, r19
 686:	84 1f       	adc	r24, r20
 688:	48 f4       	brcc	.+18     	; 0x69c <__addsf3x+0x9c>
 68a:	87 95       	ror	r24
 68c:	77 95       	ror	r23
 68e:	67 95       	ror	r22
 690:	b7 95       	ror	r27
 692:	f7 95       	ror	r31
 694:	9e 3f       	cpi	r25, 0xFE	; 254
 696:	08 f0       	brcs	.+2      	; 0x69a <__addsf3x+0x9a>
 698:	b0 cf       	rjmp	.-160    	; 0x5fa <__addsf3+0x28>
 69a:	93 95       	inc	r25
 69c:	88 0f       	add	r24, r24
 69e:	08 f0       	brcs	.+2      	; 0x6a2 <__addsf3x+0xa2>
 6a0:	99 27       	eor	r25, r25
 6a2:	ee 0f       	add	r30, r30
 6a4:	97 95       	ror	r25
 6a6:	87 95       	ror	r24
 6a8:	08 95       	ret

000006aa <__divsf3>:
 6aa:	0e 94 69 03 	call	0x6d2	; 0x6d2 <__divsf3x>
 6ae:	0c 94 4a 04 	jmp	0x894	; 0x894 <__fp_round>
 6b2:	0e 94 43 04 	call	0x886	; 0x886 <__fp_pscB>
 6b6:	58 f0       	brcs	.+22     	; 0x6ce <__divsf3+0x24>
 6b8:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscA>
 6bc:	40 f0       	brcs	.+16     	; 0x6ce <__divsf3+0x24>
 6be:	29 f4       	brne	.+10     	; 0x6ca <__divsf3+0x20>
 6c0:	5f 3f       	cpi	r21, 0xFF	; 255
 6c2:	29 f0       	breq	.+10     	; 0x6ce <__divsf3+0x24>
 6c4:	0c 94 33 04 	jmp	0x866	; 0x866 <__fp_inf>
 6c8:	51 11       	cpse	r21, r1
 6ca:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_szero>
 6ce:	0c 94 39 04 	jmp	0x872	; 0x872 <__fp_nan>

000006d2 <__divsf3x>:
 6d2:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_split3>
 6d6:	68 f3       	brcs	.-38     	; 0x6b2 <__divsf3+0x8>

000006d8 <__divsf3_pse>:
 6d8:	99 23       	and	r25, r25
 6da:	b1 f3       	breq	.-20     	; 0x6c8 <__divsf3+0x1e>
 6dc:	55 23       	and	r21, r21
 6de:	91 f3       	breq	.-28     	; 0x6c4 <__divsf3+0x1a>
 6e0:	95 1b       	sub	r25, r21
 6e2:	55 0b       	sbc	r21, r21
 6e4:	bb 27       	eor	r27, r27
 6e6:	aa 27       	eor	r26, r26
 6e8:	62 17       	cp	r22, r18
 6ea:	73 07       	cpc	r23, r19
 6ec:	84 07       	cpc	r24, r20
 6ee:	38 f0       	brcs	.+14     	; 0x6fe <__divsf3_pse+0x26>
 6f0:	9f 5f       	subi	r25, 0xFF	; 255
 6f2:	5f 4f       	sbci	r21, 0xFF	; 255
 6f4:	22 0f       	add	r18, r18
 6f6:	33 1f       	adc	r19, r19
 6f8:	44 1f       	adc	r20, r20
 6fa:	aa 1f       	adc	r26, r26
 6fc:	a9 f3       	breq	.-22     	; 0x6e8 <__divsf3_pse+0x10>
 6fe:	35 d0       	rcall	.+106    	; 0x76a <__divsf3_pse+0x92>
 700:	0e 2e       	mov	r0, r30
 702:	3a f0       	brmi	.+14     	; 0x712 <__divsf3_pse+0x3a>
 704:	e0 e8       	ldi	r30, 0x80	; 128
 706:	32 d0       	rcall	.+100    	; 0x76c <__divsf3_pse+0x94>
 708:	91 50       	subi	r25, 0x01	; 1
 70a:	50 40       	sbci	r21, 0x00	; 0
 70c:	e6 95       	lsr	r30
 70e:	00 1c       	adc	r0, r0
 710:	ca f7       	brpl	.-14     	; 0x704 <__divsf3_pse+0x2c>
 712:	2b d0       	rcall	.+86     	; 0x76a <__divsf3_pse+0x92>
 714:	fe 2f       	mov	r31, r30
 716:	29 d0       	rcall	.+82     	; 0x76a <__divsf3_pse+0x92>
 718:	66 0f       	add	r22, r22
 71a:	77 1f       	adc	r23, r23
 71c:	88 1f       	adc	r24, r24
 71e:	bb 1f       	adc	r27, r27
 720:	26 17       	cp	r18, r22
 722:	37 07       	cpc	r19, r23
 724:	48 07       	cpc	r20, r24
 726:	ab 07       	cpc	r26, r27
 728:	b0 e8       	ldi	r27, 0x80	; 128
 72a:	09 f0       	breq	.+2      	; 0x72e <__divsf3_pse+0x56>
 72c:	bb 0b       	sbc	r27, r27
 72e:	80 2d       	mov	r24, r0
 730:	bf 01       	movw	r22, r30
 732:	ff 27       	eor	r31, r31
 734:	93 58       	subi	r25, 0x83	; 131
 736:	5f 4f       	sbci	r21, 0xFF	; 255
 738:	3a f0       	brmi	.+14     	; 0x748 <__divsf3_pse+0x70>
 73a:	9e 3f       	cpi	r25, 0xFE	; 254
 73c:	51 05       	cpc	r21, r1
 73e:	78 f0       	brcs	.+30     	; 0x75e <__divsf3_pse+0x86>
 740:	0c 94 33 04 	jmp	0x866	; 0x866 <__fp_inf>
 744:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_szero>
 748:	5f 3f       	cpi	r21, 0xFF	; 255
 74a:	e4 f3       	brlt	.-8      	; 0x744 <__divsf3_pse+0x6c>
 74c:	98 3e       	cpi	r25, 0xE8	; 232
 74e:	d4 f3       	brlt	.-12     	; 0x744 <__divsf3_pse+0x6c>
 750:	86 95       	lsr	r24
 752:	77 95       	ror	r23
 754:	67 95       	ror	r22
 756:	b7 95       	ror	r27
 758:	f7 95       	ror	r31
 75a:	9f 5f       	subi	r25, 0xFF	; 255
 75c:	c9 f7       	brne	.-14     	; 0x750 <__divsf3_pse+0x78>
 75e:	88 0f       	add	r24, r24
 760:	91 1d       	adc	r25, r1
 762:	96 95       	lsr	r25
 764:	87 95       	ror	r24
 766:	97 f9       	bld	r25, 7
 768:	08 95       	ret
 76a:	e1 e0       	ldi	r30, 0x01	; 1
 76c:	66 0f       	add	r22, r22
 76e:	77 1f       	adc	r23, r23
 770:	88 1f       	adc	r24, r24
 772:	bb 1f       	adc	r27, r27
 774:	62 17       	cp	r22, r18
 776:	73 07       	cpc	r23, r19
 778:	84 07       	cpc	r24, r20
 77a:	ba 07       	cpc	r27, r26
 77c:	20 f0       	brcs	.+8      	; 0x786 <__divsf3_pse+0xae>
 77e:	62 1b       	sub	r22, r18
 780:	73 0b       	sbc	r23, r19
 782:	84 0b       	sbc	r24, r20
 784:	ba 0b       	sbc	r27, r26
 786:	ee 1f       	adc	r30, r30
 788:	88 f7       	brcc	.-30     	; 0x76c <__divsf3_pse+0x94>
 78a:	e0 95       	com	r30
 78c:	08 95       	ret

0000078e <__fixunssfsi>:
 78e:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__fp_splitA>
 792:	88 f0       	brcs	.+34     	; 0x7b6 <__fixunssfsi+0x28>
 794:	9f 57       	subi	r25, 0x7F	; 127
 796:	98 f0       	brcs	.+38     	; 0x7be <__fixunssfsi+0x30>
 798:	b9 2f       	mov	r27, r25
 79a:	99 27       	eor	r25, r25
 79c:	b7 51       	subi	r27, 0x17	; 23
 79e:	b0 f0       	brcs	.+44     	; 0x7cc <__fixunssfsi+0x3e>
 7a0:	e1 f0       	breq	.+56     	; 0x7da <__fixunssfsi+0x4c>
 7a2:	66 0f       	add	r22, r22
 7a4:	77 1f       	adc	r23, r23
 7a6:	88 1f       	adc	r24, r24
 7a8:	99 1f       	adc	r25, r25
 7aa:	1a f0       	brmi	.+6      	; 0x7b2 <__fixunssfsi+0x24>
 7ac:	ba 95       	dec	r27
 7ae:	c9 f7       	brne	.-14     	; 0x7a2 <__fixunssfsi+0x14>
 7b0:	14 c0       	rjmp	.+40     	; 0x7da <__fixunssfsi+0x4c>
 7b2:	b1 30       	cpi	r27, 0x01	; 1
 7b4:	91 f0       	breq	.+36     	; 0x7da <__fixunssfsi+0x4c>
 7b6:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__fp_zero>
 7ba:	b1 e0       	ldi	r27, 0x01	; 1
 7bc:	08 95       	ret
 7be:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_zero>
 7c2:	67 2f       	mov	r22, r23
 7c4:	78 2f       	mov	r23, r24
 7c6:	88 27       	eor	r24, r24
 7c8:	b8 5f       	subi	r27, 0xF8	; 248
 7ca:	39 f0       	breq	.+14     	; 0x7da <__fixunssfsi+0x4c>
 7cc:	b9 3f       	cpi	r27, 0xF9	; 249
 7ce:	cc f3       	brlt	.-14     	; 0x7c2 <__fixunssfsi+0x34>
 7d0:	86 95       	lsr	r24
 7d2:	77 95       	ror	r23
 7d4:	67 95       	ror	r22
 7d6:	b3 95       	inc	r27
 7d8:	d9 f7       	brne	.-10     	; 0x7d0 <__fixunssfsi+0x42>
 7da:	3e f4       	brtc	.+14     	; 0x7ea <__fixunssfsi+0x5c>
 7dc:	90 95       	com	r25
 7de:	80 95       	com	r24
 7e0:	70 95       	com	r23
 7e2:	61 95       	neg	r22
 7e4:	7f 4f       	sbci	r23, 0xFF	; 255
 7e6:	8f 4f       	sbci	r24, 0xFF	; 255
 7e8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ea:	08 95       	ret

000007ec <__floatunsisf>:
 7ec:	e8 94       	clt
 7ee:	09 c0       	rjmp	.+18     	; 0x802 <__DATA_REGION_LENGTH__+0x2>

000007f0 <__floatsisf>:
 7f0:	97 fb       	bst	r25, 7
 7f2:	3e f4       	brtc	.+14     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7f4:	90 95       	com	r25
 7f6:	80 95       	com	r24
 7f8:	70 95       	com	r23
 7fa:	61 95       	neg	r22
 7fc:	7f 4f       	sbci	r23, 0xFF	; 255
 7fe:	8f 4f       	sbci	r24, 0xFF	; 255
 800:	9f 4f       	sbci	r25, 0xFF	; 255
 802:	99 23       	and	r25, r25
 804:	a9 f0       	breq	.+42     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 806:	f9 2f       	mov	r31, r25
 808:	96 e9       	ldi	r25, 0x96	; 150
 80a:	bb 27       	eor	r27, r27
 80c:	93 95       	inc	r25
 80e:	f6 95       	lsr	r31
 810:	87 95       	ror	r24
 812:	77 95       	ror	r23
 814:	67 95       	ror	r22
 816:	b7 95       	ror	r27
 818:	f1 11       	cpse	r31, r1
 81a:	f8 cf       	rjmp	.-16     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 81c:	fa f4       	brpl	.+62     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 81e:	bb 0f       	add	r27, r27
 820:	11 f4       	brne	.+4      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 822:	60 ff       	sbrs	r22, 0
 824:	1b c0       	rjmp	.+54     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 826:	6f 5f       	subi	r22, 0xFF	; 255
 828:	7f 4f       	sbci	r23, 0xFF	; 255
 82a:	8f 4f       	sbci	r24, 0xFF	; 255
 82c:	9f 4f       	sbci	r25, 0xFF	; 255
 82e:	16 c0       	rjmp	.+44     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 830:	88 23       	and	r24, r24
 832:	11 f0       	breq	.+4      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 834:	96 e9       	ldi	r25, 0x96	; 150
 836:	11 c0       	rjmp	.+34     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 838:	77 23       	and	r23, r23
 83a:	21 f0       	breq	.+8      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 83c:	9e e8       	ldi	r25, 0x8E	; 142
 83e:	87 2f       	mov	r24, r23
 840:	76 2f       	mov	r23, r22
 842:	05 c0       	rjmp	.+10     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 844:	66 23       	and	r22, r22
 846:	71 f0       	breq	.+28     	; 0x864 <__stack+0x5>
 848:	96 e8       	ldi	r25, 0x86	; 134
 84a:	86 2f       	mov	r24, r22
 84c:	70 e0       	ldi	r23, 0x00	; 0
 84e:	60 e0       	ldi	r22, 0x00	; 0
 850:	2a f0       	brmi	.+10     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 852:	9a 95       	dec	r25
 854:	66 0f       	add	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	da f7       	brpl	.-10     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 85c:	88 0f       	add	r24, r24
 85e:	96 95       	lsr	r25
 860:	87 95       	ror	r24
 862:	97 f9       	bld	r25, 7
 864:	08 95       	ret

00000866 <__fp_inf>:
 866:	97 f9       	bld	r25, 7
 868:	9f 67       	ori	r25, 0x7F	; 127
 86a:	80 e8       	ldi	r24, 0x80	; 128
 86c:	70 e0       	ldi	r23, 0x00	; 0
 86e:	60 e0       	ldi	r22, 0x00	; 0
 870:	08 95       	ret

00000872 <__fp_nan>:
 872:	9f ef       	ldi	r25, 0xFF	; 255
 874:	80 ec       	ldi	r24, 0xC0	; 192
 876:	08 95       	ret

00000878 <__fp_pscA>:
 878:	00 24       	eor	r0, r0
 87a:	0a 94       	dec	r0
 87c:	16 16       	cp	r1, r22
 87e:	17 06       	cpc	r1, r23
 880:	18 06       	cpc	r1, r24
 882:	09 06       	cpc	r0, r25
 884:	08 95       	ret

00000886 <__fp_pscB>:
 886:	00 24       	eor	r0, r0
 888:	0a 94       	dec	r0
 88a:	12 16       	cp	r1, r18
 88c:	13 06       	cpc	r1, r19
 88e:	14 06       	cpc	r1, r20
 890:	05 06       	cpc	r0, r21
 892:	08 95       	ret

00000894 <__fp_round>:
 894:	09 2e       	mov	r0, r25
 896:	03 94       	inc	r0
 898:	00 0c       	add	r0, r0
 89a:	11 f4       	brne	.+4      	; 0x8a0 <__fp_round+0xc>
 89c:	88 23       	and	r24, r24
 89e:	52 f0       	brmi	.+20     	; 0x8b4 <__fp_round+0x20>
 8a0:	bb 0f       	add	r27, r27
 8a2:	40 f4       	brcc	.+16     	; 0x8b4 <__fp_round+0x20>
 8a4:	bf 2b       	or	r27, r31
 8a6:	11 f4       	brne	.+4      	; 0x8ac <__fp_round+0x18>
 8a8:	60 ff       	sbrs	r22, 0
 8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <__fp_round+0x20>
 8ac:	6f 5f       	subi	r22, 0xFF	; 255
 8ae:	7f 4f       	sbci	r23, 0xFF	; 255
 8b0:	8f 4f       	sbci	r24, 0xFF	; 255
 8b2:	9f 4f       	sbci	r25, 0xFF	; 255
 8b4:	08 95       	ret

000008b6 <__fp_split3>:
 8b6:	57 fd       	sbrc	r21, 7
 8b8:	90 58       	subi	r25, 0x80	; 128
 8ba:	44 0f       	add	r20, r20
 8bc:	55 1f       	adc	r21, r21
 8be:	59 f0       	breq	.+22     	; 0x8d6 <__fp_splitA+0x10>
 8c0:	5f 3f       	cpi	r21, 0xFF	; 255
 8c2:	71 f0       	breq	.+28     	; 0x8e0 <__fp_splitA+0x1a>
 8c4:	47 95       	ror	r20

000008c6 <__fp_splitA>:
 8c6:	88 0f       	add	r24, r24
 8c8:	97 fb       	bst	r25, 7
 8ca:	99 1f       	adc	r25, r25
 8cc:	61 f0       	breq	.+24     	; 0x8e6 <__fp_splitA+0x20>
 8ce:	9f 3f       	cpi	r25, 0xFF	; 255
 8d0:	79 f0       	breq	.+30     	; 0x8f0 <__fp_splitA+0x2a>
 8d2:	87 95       	ror	r24
 8d4:	08 95       	ret
 8d6:	12 16       	cp	r1, r18
 8d8:	13 06       	cpc	r1, r19
 8da:	14 06       	cpc	r1, r20
 8dc:	55 1f       	adc	r21, r21
 8de:	f2 cf       	rjmp	.-28     	; 0x8c4 <__fp_split3+0xe>
 8e0:	46 95       	lsr	r20
 8e2:	f1 df       	rcall	.-30     	; 0x8c6 <__fp_splitA>
 8e4:	08 c0       	rjmp	.+16     	; 0x8f6 <__fp_splitA+0x30>
 8e6:	16 16       	cp	r1, r22
 8e8:	17 06       	cpc	r1, r23
 8ea:	18 06       	cpc	r1, r24
 8ec:	99 1f       	adc	r25, r25
 8ee:	f1 cf       	rjmp	.-30     	; 0x8d2 <__fp_splitA+0xc>
 8f0:	86 95       	lsr	r24
 8f2:	71 05       	cpc	r23, r1
 8f4:	61 05       	cpc	r22, r1
 8f6:	08 94       	sec
 8f8:	08 95       	ret

000008fa <__fp_zero>:
 8fa:	e8 94       	clt

000008fc <__fp_szero>:
 8fc:	bb 27       	eor	r27, r27
 8fe:	66 27       	eor	r22, r22
 900:	77 27       	eor	r23, r23
 902:	cb 01       	movw	r24, r22
 904:	97 f9       	bld	r25, 7
 906:	08 95       	ret

00000908 <__mulsf3>:
 908:	0e 94 97 04 	call	0x92e	; 0x92e <__mulsf3x>
 90c:	0c 94 4a 04 	jmp	0x894	; 0x894 <__fp_round>
 910:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscA>
 914:	38 f0       	brcs	.+14     	; 0x924 <__mulsf3+0x1c>
 916:	0e 94 43 04 	call	0x886	; 0x886 <__fp_pscB>
 91a:	20 f0       	brcs	.+8      	; 0x924 <__mulsf3+0x1c>
 91c:	95 23       	and	r25, r21
 91e:	11 f0       	breq	.+4      	; 0x924 <__mulsf3+0x1c>
 920:	0c 94 33 04 	jmp	0x866	; 0x866 <__fp_inf>
 924:	0c 94 39 04 	jmp	0x872	; 0x872 <__fp_nan>
 928:	11 24       	eor	r1, r1
 92a:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_szero>

0000092e <__mulsf3x>:
 92e:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_split3>
 932:	70 f3       	brcs	.-36     	; 0x910 <__mulsf3+0x8>

00000934 <__mulsf3_pse>:
 934:	95 9f       	mul	r25, r21
 936:	c1 f3       	breq	.-16     	; 0x928 <__mulsf3+0x20>
 938:	95 0f       	add	r25, r21
 93a:	50 e0       	ldi	r21, 0x00	; 0
 93c:	55 1f       	adc	r21, r21
 93e:	62 9f       	mul	r22, r18
 940:	f0 01       	movw	r30, r0
 942:	72 9f       	mul	r23, r18
 944:	bb 27       	eor	r27, r27
 946:	f0 0d       	add	r31, r0
 948:	b1 1d       	adc	r27, r1
 94a:	63 9f       	mul	r22, r19
 94c:	aa 27       	eor	r26, r26
 94e:	f0 0d       	add	r31, r0
 950:	b1 1d       	adc	r27, r1
 952:	aa 1f       	adc	r26, r26
 954:	64 9f       	mul	r22, r20
 956:	66 27       	eor	r22, r22
 958:	b0 0d       	add	r27, r0
 95a:	a1 1d       	adc	r26, r1
 95c:	66 1f       	adc	r22, r22
 95e:	82 9f       	mul	r24, r18
 960:	22 27       	eor	r18, r18
 962:	b0 0d       	add	r27, r0
 964:	a1 1d       	adc	r26, r1
 966:	62 1f       	adc	r22, r18
 968:	73 9f       	mul	r23, r19
 96a:	b0 0d       	add	r27, r0
 96c:	a1 1d       	adc	r26, r1
 96e:	62 1f       	adc	r22, r18
 970:	83 9f       	mul	r24, r19
 972:	a0 0d       	add	r26, r0
 974:	61 1d       	adc	r22, r1
 976:	22 1f       	adc	r18, r18
 978:	74 9f       	mul	r23, r20
 97a:	33 27       	eor	r19, r19
 97c:	a0 0d       	add	r26, r0
 97e:	61 1d       	adc	r22, r1
 980:	23 1f       	adc	r18, r19
 982:	84 9f       	mul	r24, r20
 984:	60 0d       	add	r22, r0
 986:	21 1d       	adc	r18, r1
 988:	82 2f       	mov	r24, r18
 98a:	76 2f       	mov	r23, r22
 98c:	6a 2f       	mov	r22, r26
 98e:	11 24       	eor	r1, r1
 990:	9f 57       	subi	r25, 0x7F	; 127
 992:	50 40       	sbci	r21, 0x00	; 0
 994:	9a f0       	brmi	.+38     	; 0x9bc <__mulsf3_pse+0x88>
 996:	f1 f0       	breq	.+60     	; 0x9d4 <__mulsf3_pse+0xa0>
 998:	88 23       	and	r24, r24
 99a:	4a f0       	brmi	.+18     	; 0x9ae <__mulsf3_pse+0x7a>
 99c:	ee 0f       	add	r30, r30
 99e:	ff 1f       	adc	r31, r31
 9a0:	bb 1f       	adc	r27, r27
 9a2:	66 1f       	adc	r22, r22
 9a4:	77 1f       	adc	r23, r23
 9a6:	88 1f       	adc	r24, r24
 9a8:	91 50       	subi	r25, 0x01	; 1
 9aa:	50 40       	sbci	r21, 0x00	; 0
 9ac:	a9 f7       	brne	.-22     	; 0x998 <__mulsf3_pse+0x64>
 9ae:	9e 3f       	cpi	r25, 0xFE	; 254
 9b0:	51 05       	cpc	r21, r1
 9b2:	80 f0       	brcs	.+32     	; 0x9d4 <__mulsf3_pse+0xa0>
 9b4:	0c 94 33 04 	jmp	0x866	; 0x866 <__fp_inf>
 9b8:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_szero>
 9bc:	5f 3f       	cpi	r21, 0xFF	; 255
 9be:	e4 f3       	brlt	.-8      	; 0x9b8 <__mulsf3_pse+0x84>
 9c0:	98 3e       	cpi	r25, 0xE8	; 232
 9c2:	d4 f3       	brlt	.-12     	; 0x9b8 <__mulsf3_pse+0x84>
 9c4:	86 95       	lsr	r24
 9c6:	77 95       	ror	r23
 9c8:	67 95       	ror	r22
 9ca:	b7 95       	ror	r27
 9cc:	f7 95       	ror	r31
 9ce:	e7 95       	ror	r30
 9d0:	9f 5f       	subi	r25, 0xFF	; 255
 9d2:	c1 f7       	brne	.-16     	; 0x9c4 <__mulsf3_pse+0x90>
 9d4:	fe 2b       	or	r31, r30
 9d6:	88 0f       	add	r24, r24
 9d8:	91 1d       	adc	r25, r1
 9da:	96 95       	lsr	r25
 9dc:	87 95       	ror	r24
 9de:	97 f9       	bld	r25, 7
 9e0:	08 95       	ret

000009e2 <_exit>:
 9e2:	f8 94       	cli

000009e4 <__stop_program>:
 9e4:	ff cf       	rjmp	.-2      	; 0x9e4 <__stop_program>
